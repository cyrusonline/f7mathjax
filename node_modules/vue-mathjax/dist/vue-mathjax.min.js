!(function(e) {
  var t = {}
  function n(r) {
    if (t[r]) return t[r].exports
    var o = (t[r] = { i: r, l: !1, exports: {} })
    return e[r].call(o.exports, o, o.exports, n), (o.l = !0), o.exports
  }
  ;(n.m = e),
    (n.c = t),
    (n.d = function(e, t, r) {
      n.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: r })
    }),
    (n.r = function(e) {
      'undefined' != typeof Symbol &&
        Symbol.toStringTag &&
        Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' }),
        Object.defineProperty(e, '__esModule', { value: !0 })
    }),
    (n.t = function(e, t) {
      if ((1 & t && (e = n(e)), 8 & t)) return e
      if (4 & t && 'object' == typeof e && e && e.__esModule) return e
      var r = Object.create(null)
      if (
        (n.r(r),
        Object.defineProperty(r, 'default', { enumerable: !0, value: e }),
        2 & t && 'string' != typeof e)
      )
        for (var o in e)
          n.d(
            r,
            o,
            function(t) {
              return e[t]
            }.bind(null, o)
          )
      return r
    }),
    (n.n = function(e) {
      var t =
        e && e.__esModule
          ? function() {
              return e.default
            }
          : function() {
              return e
            }
      return n.d(t, 'a', t), t
    }),
    (n.o = function(e, t) {
      return Object.prototype.hasOwnProperty.call(e, t)
    }),
    (n.p = ''),
    n((n.s = 0))
})([
  function(e, t, n) {
    'use strict'
    n.r(t)
    var r = function() {
      var e = this.$createElement
      return (this._self._c || e)('span', {
        ref: 'mathJaxEl',
        attrs: { bind: this.mdData }
      })
    }
    r._withStripped = !0
    var o = (function(e, t, n, r, o, a, i, s) {
      var u,
        l = 'function' == typeof e ? e.options : e
      if (
        (t && ((l.render = t), (l.staticRenderFns = n), (l._compiled = !0)),
        r && (l.functional = !0),
        a && (l._scopeId = 'data-v-' + a),
        i
          ? ((u = function(e) {
              ;(e =
                e ||
                (this.$vnode && this.$vnode.ssrContext) ||
                (this.parent &&
                  this.parent.$vnode &&
                  this.parent.$vnode.ssrContext)) ||
                'undefined' == typeof __VUE_SSR_CONTEXT__ ||
                (e = __VUE_SSR_CONTEXT__),
                o && o.call(this, e),
                e && e._registeredComponents && e._registeredComponents.add(i)
            }),
            (l._ssrRegister = u))
          : o &&
            (u = s
              ? function() {
                  o.call(this, this.$root.$options.shadowRoot)
                }
              : o),
        u)
      )
        if (l.functional) {
          l._injectStyles = u
          var d = l.render
          l.render = function(e, t) {
            return u.call(t), d(e, t)
          }
        } else {
          var c = l.beforeCreate
          l.beforeCreate = c ? [].concat(c, u) : [u]
        }
      return { exports: e, options: l }
    })(
      {
        name: 'vue-mathjax',
        props: ['mdData'],
        methods: {
          renderContent() {
            this.$refs.mathJaxEl.textContent = this.mdData
          },
          renderMathJax() {
            this.renderContent(),
              window.MathJax &&
                (window.MathJax.Hub.Config({
                  tex2jax: {
                    inlineMath: [['$', '$'], ['(', ')']],
                    displayMath: [['$$', '$$'], ['[', ']']],
                    processEscapes: !0,
                    processEnvironments: !0
                  },
                  displayAlign: 'center',
                  'HTML-CSS': {
                    styles: { '.MathJax_Display': { margin: 0 } },
                    linebreaks: { automatic: !0 }
                  }
                }),
                window.MathJax.Hub.Queue([
                  'Typeset',
                  window.MathJax.Hub,
                  this.$refs.mathJaxEl
                ]))
          }
        },
        watch: {
          mdData() {
            this.renderMathJax()
          }
        }
      },
      r,
      [],
      !1,
      null,
      null,
      null
    )
    o.options.__file = 'src/vue-mathjax.vue'
    var a = o.exports
    t.default = {
      install: function(e, t) {
        e.component('vue-mathjax', a)
      }
    }
  }
])
